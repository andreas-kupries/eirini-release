apiVersion: apps/v1
kind: Deployment
metadata:
  name: "eirini-staging-reporter"
  namespace: scf
spec:
  selector:
    matchLabels:
      name: "eirini-staging-reporter"
  template:
    metadata:
      labels:
        name: "eirini-staging-reporter"
    spec:
      dnsPolicy: "ClusterFirst"
      serviceAccountName: "eirini-events"
      securityContext:
        runAsNonRoot: true
      containers:
      - name: crash-reporter
        image: eirini/staging-reporter@sha256:b2dae3f32dbe4b15ccb64e7bcb2d4c0cce04d43f335949a47b4d64657fbf9a8a
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - name: config-map-volume
          mountPath: /etc/eirini/config
        - name: cf-secrets
          mountPath: /etc/eirini/secrets
      volumes:
        - name: config-map-volume
          configMap:
            name: "eirini"
            items:
            - key: staging-reporter.yml
              path: staging-reporter.yml
        - name: cf-secrets
          projected:
            sources:
            - secret:
                name: "{{ .Values.opi.staging.tls.stagingReporter.secretName }}"
                items:
                - key: "{{ .Values.opi.staging.tls.stagingReporter.certPath }}"
                  path: eirini-client.crt
                - key: "{{ .Values.opi.staging.tls.stagingReporter.keyPath }}"
                  path: eirini-client.key
                - key: "{{ .Values.opi.staging.tls.stagingReporter.caPath }}"
                  path: eirini-client.ca
            - secret:
                name: "{{ .Values.opi.events.tls.capi.secretName }}"
                items:
                - key: "{{ .Values.opi.events.tls.capi.caPath }}"
                  path: cc.ca
